package mpaxos;

enum msgtype_t {
    PREPARE = 0;
    PROMISE = 1;
    ACCEPT = 2;
    ACCEPTED = 3;
    LEARN = 4;
    DECIDE = 5;
    SLOT = 6;
}

enum msgack_t {
    YES = 0;
    NO = 1;
}

message msg_header_t {
    required msgtype_t msgtype = 1;
    required uint32 nid = 2;
    required uint64 tid = 3;
}

message roundid_t {
    required uint32 gid = 1;
    required uint64 sid = 2;
    required uint64 bid = 3;
}

message proposal_t {
    repeated roundid_t rid = 1;
    required uint64 tid = 2;
    required uint32 nid = 3;
    optional bytes value = 4;
    optional coded_value_t cvalue = 5;
}

message msg_prep_t {
    required msg_header_t header = 1;
    required roundid_t rid = 2;
}

message msg_ack_prep_t {
    required msg_header_t header = 1;
    required roundid_t rid = 2;
    required msgack_t ack = 3;
    optional proposal_t prop = 4;
}

message msg_accp_t {
    required msg_header_t header = 1;
    required roundid_t rid = 2;
    required proposal_t prop = 3;
}

message msg_ack_accp_t {
    required msg_header_t header = 1;
    required roundid_t rid = 2;
    required msgack_t ack = 3;
    required uint64 max_bid = 4;
    optional proposal_t prop = 5;
}

message coded_value_t {
    required uint32 sz = 1;
    required uint32 k = 2;
    required uint32 n = 3;
    required uint32 id = 4;
    required bytes value = 5; 
}
