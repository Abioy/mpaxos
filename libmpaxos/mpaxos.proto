package mpaxos;

enum MsgType {
  PREPARE = 0;
  PROMISE = 1;
  ACCEPT = 2;
  ACCEPTED = 3;
  DECIDE = 4;
  LEARN = 5;
  TEACH = 6;
}

message MsgHeader {
  required MsgType msg_type = 1;
  required uint32 node_id = 2;
  required uint64 slot_id = 3;
}

message PropValue {
  required uint64 id = 1;
  required string data = 2;
}

message MsgPrepare {
  required MsgHeader msg_header = 1;
  required uint64 ballot_id = 2;
}

message MsgAckPrepare {
  required MsgHeader msg_header = 1;
  required uint64 ballot_id = 2;
  required bool reply = 3;
  required uint64 max_ballot_id = 4;
  optional PropValue max_prop_value = 5;
}

message MsgAccept {
  required MsgHeader msg_header = 1;
  required uint64 ballot_id = 2;
  required PropValue prop_value = 3;
}

message MsgAckAccept {
  required MsgHeader msg_header = 1;
  required uint64 ballot_id = 2;
  required bool reply = 3;
}

message MsgDecide {
  required MsgHeader msg_header = 1;
  required uint64 value_id = 2;
}

message MsgLearn {
  required MsgHeader msg_header = 1;
}

message MsgTeach {
  required MsgHeader msg_header = 1;
  required PropValue prop_value = 2;
}
